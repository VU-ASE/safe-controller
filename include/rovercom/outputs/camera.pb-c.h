/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: outputs/camera.proto */

#ifndef PROTOBUF_C_outputs_2fcamera_2eproto__INCLUDED
#define PROTOBUF_C_outputs_2fcamera_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _ProtobufMsgs__CanvasObject ProtobufMsgs__CanvasObject;
typedef struct _ProtobufMsgs__CanvasObject__Point ProtobufMsgs__CanvasObject__Point;
typedef struct _ProtobufMsgs__CanvasObject__Color ProtobufMsgs__CanvasObject__Color;
typedef struct _ProtobufMsgs__CanvasObject__Line ProtobufMsgs__CanvasObject__Line;
typedef struct _ProtobufMsgs__CanvasObject__Rectangle ProtobufMsgs__CanvasObject__Rectangle;
typedef struct _ProtobufMsgs__CanvasObject__Circle ProtobufMsgs__CanvasObject__Circle;
typedef struct _ProtobufMsgs__Canvas ProtobufMsgs__Canvas;
typedef struct _ProtobufMsgs__CameraSensorOutput ProtobufMsgs__CameraSensorOutput;
typedef struct _ProtobufMsgs__CameraSensorOutput__Trajectory ProtobufMsgs__CameraSensorOutput__Trajectory;
typedef struct _ProtobufMsgs__CameraSensorOutput__Trajectory__Point ProtobufMsgs__CameraSensorOutput__Trajectory__Point;
typedef struct _ProtobufMsgs__CameraSensorOutput__DebugFrame ProtobufMsgs__CameraSensorOutput__DebugFrame;
typedef struct _ProtobufMsgs__CameraSensorOutput__Objects ProtobufMsgs__CameraSensorOutput__Objects;


/* --- enums --- */

/*
 * Possible Objects the Imaging Module may detect
 */
typedef enum _ProtobufMsgs__DetectedObjects {
  /*
   * Finish_line_detected 
   */
  PROTOBUF_MSGS__DETECTED_OBJECTS__FINISH_LINE = 0,
  /*
   * Car no longer on the track 
   */
  PROTOBUF_MSGS__DETECTED_OBJECTS__OFF_TRACK = 1,
  /*
   * Detected obstacle 
   */
  PROTOBUF_MSGS__DETECTED_OBJECTS__OBSTACLE = 2,
  /*
   * Detected intersection 
   */
  PROTOBUF_MSGS__DETECTED_OBJECTS__INTERSECTION = 3,
  /*
   * Can not find left lane 
   */
  PROTOBUF_MSGS__DETECTED_OBJECTS__MISSING_LEFT_LANE = 4,
  /*
   * Can not find right lane 
   */
  PROTOBUF_MSGS__DETECTED_OBJECTS__MISSING_RIGHT_LANE = 5,
  /*
   * 90 degree right turn 
   */
  PROTOBUF_MSGS__DETECTED_OBJECTS__SHARP_RIGHT = 6,
  /*
   * 90 degree left turn  
   */
  PROTOBUF_MSGS__DETECTED_OBJECTS__SHARP_LEFT = 7,
  /*
   * Detected U turn 
   */
  PROTOBUF_MSGS__DETECTED_OBJECTS__U_TURN = 8,
  /*
   * Detected S turn (double u turn) 
   */
  PROTOBUF_MSGS__DETECTED_OBJECTS__S_TURN = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTOBUF_MSGS__DETECTED_OBJECTS)
} ProtobufMsgs__DetectedObjects;

/* --- messages --- */

struct  _ProtobufMsgs__CanvasObject__Point
{
  ProtobufCMessage base;
  uint32_t x;
  uint32_t y;
};
#define PROTOBUF_MSGS__CANVAS_OBJECT__POINT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_msgs__canvas_object__point__descriptor) \
    , 0, 0 }


struct  _ProtobufMsgs__CanvasObject__Color
{
  ProtobufCMessage base;
  uint32_t r;
  uint32_t g;
  uint32_t b;
  uint32_t a;
};
#define PROTOBUF_MSGS__CANVAS_OBJECT__COLOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_msgs__canvas_object__color__descriptor) \
    , 0, 0, 0, 0 }


struct  _ProtobufMsgs__CanvasObject__Line
{
  ProtobufCMessage base;
  ProtobufMsgs__CanvasObject__Point *start;
  ProtobufMsgs__CanvasObject__Point *end;
  uint32_t width;
  ProtobufMsgs__CanvasObject__Color *color;
};
#define PROTOBUF_MSGS__CANVAS_OBJECT__LINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_msgs__canvas_object__line__descriptor) \
    , NULL, NULL, 0, NULL }


struct  _ProtobufMsgs__CanvasObject__Rectangle
{
  ProtobufCMessage base;
  ProtobufMsgs__CanvasObject__Point *topleft;
  ProtobufMsgs__CanvasObject__Point *bottomright;
  uint32_t width;
  ProtobufMsgs__CanvasObject__Color *color;
};
#define PROTOBUF_MSGS__CANVAS_OBJECT__RECTANGLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_msgs__canvas_object__rectangle__descriptor) \
    , NULL, NULL, 0, NULL }


struct  _ProtobufMsgs__CanvasObject__Circle
{
  ProtobufCMessage base;
  ProtobufMsgs__CanvasObject__Point *center;
  uint32_t radius;
  uint32_t width;
  ProtobufMsgs__CanvasObject__Color *color;
};
#define PROTOBUF_MSGS__CANVAS_OBJECT__CIRCLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_msgs__canvas_object__circle__descriptor) \
    , NULL, 0, 0, NULL }


typedef enum {
  PROTOBUF_MSGS__CANVAS_OBJECT__OBJECT__NOT_SET = 0,
  PROTOBUF_MSGS__CANVAS_OBJECT__OBJECT_LINE = 1,
  PROTOBUF_MSGS__CANVAS_OBJECT__OBJECT_RECTANGLE = 2,
  PROTOBUF_MSGS__CANVAS_OBJECT__OBJECT_CIRCLE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTOBUF_MSGS__CANVAS_OBJECT__OBJECT)
} ProtobufMsgs__CanvasObject__ObjectCase;

struct  _ProtobufMsgs__CanvasObject
{
  ProtobufCMessage base;
  ProtobufMsgs__CanvasObject__ObjectCase object_case;
  union {
    ProtobufMsgs__CanvasObject__Line *line;
    ProtobufMsgs__CanvasObject__Rectangle *rectangle;
    ProtobufMsgs__CanvasObject__Circle *circle;
  };
};
#define PROTOBUF_MSGS__CANVAS_OBJECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_msgs__canvas_object__descriptor) \
    , PROTOBUF_MSGS__CANVAS_OBJECT__OBJECT__NOT_SET, {0} }


struct  _ProtobufMsgs__Canvas
{
  ProtobufCMessage base;
  uint32_t width;
  uint32_t height;
  size_t n_objects;
  ProtobufMsgs__CanvasObject **objects;
};
#define PROTOBUF_MSGS__CANVAS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_msgs__canvas__descriptor) \
    , 0, 0, 0,NULL }


struct  _ProtobufMsgs__CameraSensorOutput__Trajectory__Point
{
  ProtobufCMessage base;
  int32_t x;
  int32_t y;
};
#define PROTOBUF_MSGS__CAMERA_SENSOR_OUTPUT__TRAJECTORY__POINT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_msgs__camera_sensor_output__trajectory__point__descriptor) \
    , 0, 0 }


/*
 * Defined by the Path Planner
 */
struct  _ProtobufMsgs__CameraSensorOutput__Trajectory
{
  ProtobufCMessage base;
  size_t n_points;
  ProtobufMsgs__CameraSensorOutput__Trajectory__Point **points;
  uint32_t width;
  uint32_t height;
};
#define PROTOBUF_MSGS__CAMERA_SENSOR_OUTPUT__TRAJECTORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_msgs__camera_sensor_output__trajectory__descriptor) \
    , 0,NULL, 0, 0 }


struct  _ProtobufMsgs__CameraSensorOutput__DebugFrame
{
  ProtobufCMessage base;
  ProtobufCBinaryData jpeg;
  /*
   * if image livestreaming is disabled, or imaging module wants to draw additional information on the image, it can be done here
   */
  ProtobufMsgs__Canvas *canvas;
};
#define PROTOBUF_MSGS__CAMERA_SENSOR_OUTPUT__DEBUG_FRAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_msgs__camera_sensor_output__debug_frame__descriptor) \
    , {0,NULL}, NULL }


struct  _ProtobufMsgs__CameraSensorOutput__Objects
{
  ProtobufCMessage base;
  size_t n_items;
  ProtobufMsgs__DetectedObjects *items;
};
#define PROTOBUF_MSGS__CAMERA_SENSOR_OUTPUT__OBJECTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_msgs__camera_sensor_output__objects__descriptor) \
    , 0,NULL }


/*
 * The following sensor outputs are specific to the sensor type, bring your own sensor and add your own output here!
 */
struct  _ProtobufMsgs__CameraSensorOutput
{
  ProtobufCMessage base;
  ProtobufMsgs__CameraSensorOutput__Trajectory *trajectory;
  ProtobufMsgs__CameraSensorOutput__DebugFrame *debug_frame;
  ProtobufMsgs__CameraSensorOutput__Objects *objects;
};
#define PROTOBUF_MSGS__CAMERA_SENSOR_OUTPUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_msgs__camera_sensor_output__descriptor) \
    , NULL, NULL, NULL }


/* ProtobufMsgs__CanvasObject__Point methods */
void   protobuf_msgs__canvas_object__point__init
                     (ProtobufMsgs__CanvasObject__Point         *message);
/* ProtobufMsgs__CanvasObject__Color methods */
void   protobuf_msgs__canvas_object__color__init
                     (ProtobufMsgs__CanvasObject__Color         *message);
/* ProtobufMsgs__CanvasObject__Line methods */
void   protobuf_msgs__canvas_object__line__init
                     (ProtobufMsgs__CanvasObject__Line         *message);
/* ProtobufMsgs__CanvasObject__Rectangle methods */
void   protobuf_msgs__canvas_object__rectangle__init
                     (ProtobufMsgs__CanvasObject__Rectangle         *message);
/* ProtobufMsgs__CanvasObject__Circle methods */
void   protobuf_msgs__canvas_object__circle__init
                     (ProtobufMsgs__CanvasObject__Circle         *message);
/* ProtobufMsgs__CanvasObject methods */
void   protobuf_msgs__canvas_object__init
                     (ProtobufMsgs__CanvasObject         *message);
size_t protobuf_msgs__canvas_object__get_packed_size
                     (const ProtobufMsgs__CanvasObject   *message);
size_t protobuf_msgs__canvas_object__pack
                     (const ProtobufMsgs__CanvasObject   *message,
                      uint8_t             *out);
size_t protobuf_msgs__canvas_object__pack_to_buffer
                     (const ProtobufMsgs__CanvasObject   *message,
                      ProtobufCBuffer     *buffer);
ProtobufMsgs__CanvasObject *
       protobuf_msgs__canvas_object__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protobuf_msgs__canvas_object__free_unpacked
                     (ProtobufMsgs__CanvasObject *message,
                      ProtobufCAllocator *allocator);
/* ProtobufMsgs__Canvas methods */
void   protobuf_msgs__canvas__init
                     (ProtobufMsgs__Canvas         *message);
size_t protobuf_msgs__canvas__get_packed_size
                     (const ProtobufMsgs__Canvas   *message);
size_t protobuf_msgs__canvas__pack
                     (const ProtobufMsgs__Canvas   *message,
                      uint8_t             *out);
size_t protobuf_msgs__canvas__pack_to_buffer
                     (const ProtobufMsgs__Canvas   *message,
                      ProtobufCBuffer     *buffer);
ProtobufMsgs__Canvas *
       protobuf_msgs__canvas__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protobuf_msgs__canvas__free_unpacked
                     (ProtobufMsgs__Canvas *message,
                      ProtobufCAllocator *allocator);
/* ProtobufMsgs__CameraSensorOutput__Trajectory__Point methods */
void   protobuf_msgs__camera_sensor_output__trajectory__point__init
                     (ProtobufMsgs__CameraSensorOutput__Trajectory__Point         *message);
/* ProtobufMsgs__CameraSensorOutput__Trajectory methods */
void   protobuf_msgs__camera_sensor_output__trajectory__init
                     (ProtobufMsgs__CameraSensorOutput__Trajectory         *message);
/* ProtobufMsgs__CameraSensorOutput__DebugFrame methods */
void   protobuf_msgs__camera_sensor_output__debug_frame__init
                     (ProtobufMsgs__CameraSensorOutput__DebugFrame         *message);
/* ProtobufMsgs__CameraSensorOutput__Objects methods */
void   protobuf_msgs__camera_sensor_output__objects__init
                     (ProtobufMsgs__CameraSensorOutput__Objects         *message);
/* ProtobufMsgs__CameraSensorOutput methods */
void   protobuf_msgs__camera_sensor_output__init
                     (ProtobufMsgs__CameraSensorOutput         *message);
size_t protobuf_msgs__camera_sensor_output__get_packed_size
                     (const ProtobufMsgs__CameraSensorOutput   *message);
size_t protobuf_msgs__camera_sensor_output__pack
                     (const ProtobufMsgs__CameraSensorOutput   *message,
                      uint8_t             *out);
size_t protobuf_msgs__camera_sensor_output__pack_to_buffer
                     (const ProtobufMsgs__CameraSensorOutput   *message,
                      ProtobufCBuffer     *buffer);
ProtobufMsgs__CameraSensorOutput *
       protobuf_msgs__camera_sensor_output__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protobuf_msgs__camera_sensor_output__free_unpacked
                     (ProtobufMsgs__CameraSensorOutput *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ProtobufMsgs__CanvasObject__Point_Closure)
                 (const ProtobufMsgs__CanvasObject__Point *message,
                  void *closure_data);
typedef void (*ProtobufMsgs__CanvasObject__Color_Closure)
                 (const ProtobufMsgs__CanvasObject__Color *message,
                  void *closure_data);
typedef void (*ProtobufMsgs__CanvasObject__Line_Closure)
                 (const ProtobufMsgs__CanvasObject__Line *message,
                  void *closure_data);
typedef void (*ProtobufMsgs__CanvasObject__Rectangle_Closure)
                 (const ProtobufMsgs__CanvasObject__Rectangle *message,
                  void *closure_data);
typedef void (*ProtobufMsgs__CanvasObject__Circle_Closure)
                 (const ProtobufMsgs__CanvasObject__Circle *message,
                  void *closure_data);
typedef void (*ProtobufMsgs__CanvasObject_Closure)
                 (const ProtobufMsgs__CanvasObject *message,
                  void *closure_data);
typedef void (*ProtobufMsgs__Canvas_Closure)
                 (const ProtobufMsgs__Canvas *message,
                  void *closure_data);
typedef void (*ProtobufMsgs__CameraSensorOutput__Trajectory__Point_Closure)
                 (const ProtobufMsgs__CameraSensorOutput__Trajectory__Point *message,
                  void *closure_data);
typedef void (*ProtobufMsgs__CameraSensorOutput__Trajectory_Closure)
                 (const ProtobufMsgs__CameraSensorOutput__Trajectory *message,
                  void *closure_data);
typedef void (*ProtobufMsgs__CameraSensorOutput__DebugFrame_Closure)
                 (const ProtobufMsgs__CameraSensorOutput__DebugFrame *message,
                  void *closure_data);
typedef void (*ProtobufMsgs__CameraSensorOutput__Objects_Closure)
                 (const ProtobufMsgs__CameraSensorOutput__Objects *message,
                  void *closure_data);
typedef void (*ProtobufMsgs__CameraSensorOutput_Closure)
                 (const ProtobufMsgs__CameraSensorOutput *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    protobuf_msgs__detected_objects__descriptor;
extern const ProtobufCMessageDescriptor protobuf_msgs__canvas_object__descriptor;
extern const ProtobufCMessageDescriptor protobuf_msgs__canvas_object__point__descriptor;
extern const ProtobufCMessageDescriptor protobuf_msgs__canvas_object__color__descriptor;
extern const ProtobufCMessageDescriptor protobuf_msgs__canvas_object__line__descriptor;
extern const ProtobufCMessageDescriptor protobuf_msgs__canvas_object__rectangle__descriptor;
extern const ProtobufCMessageDescriptor protobuf_msgs__canvas_object__circle__descriptor;
extern const ProtobufCMessageDescriptor protobuf_msgs__canvas__descriptor;
extern const ProtobufCMessageDescriptor protobuf_msgs__camera_sensor_output__descriptor;
extern const ProtobufCMessageDescriptor protobuf_msgs__camera_sensor_output__trajectory__descriptor;
extern const ProtobufCMessageDescriptor protobuf_msgs__camera_sensor_output__trajectory__point__descriptor;
extern const ProtobufCMessageDescriptor protobuf_msgs__camera_sensor_output__debug_frame__descriptor;
extern const ProtobufCMessageDescriptor protobuf_msgs__camera_sensor_output__objects__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_outputs_2fcamera_2eproto__INCLUDED */
